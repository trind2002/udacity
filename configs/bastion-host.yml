AWSTemplateFormatVersion: 2010-09-09
Description: >
  Tri Nguyen Duc / For creating the Bastion Host servers to debug the Web servers
Parameters:
  EnvironmentName:
    Type: String
  AMItoUse:
    Type: String
Resources:
  BastionHostSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "The security group of the bastion host for the second project. Its allow ingress to the SSH port: 22 for restricted within only my IP address"
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
        Description: "Allow SSH to my IP"
      SecurityGroupEgress:
      - IpProtocol: -1
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0
        Description: "Allow all egress traffic by default"
    WebServerInboundRoleSSH1a:
      Type: AWS::EC2::SecurityGroupIngress
      Properties:
        GroupId:
            Fn::ImportValue:
                Fn::Join:
                    - ""
                    -   - !Ref EnvironmentName
                        - "-web-server-sg-"
                        -   Ref: "AWS::Region"
        IpProtocol: "tcp"
        FromPort: 22
        ToPort: 22
        CidrIp:
            Fn::ImportValue: !Sub ${EnvironmentName}-PUB1-SN        
        Description: "Allow SSH to the bastion host in the Availability Zone 1"

    WebServerInboundRoleSSH1b:
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
            GroupId:
                Fn::ImportValue:
                    Fn::Join:
                        - ""
                        -   - !Ref EnvironmentName
                            - "-web-server-sg-"
                            -   Ref: "AWS::Region"
            IpProtocol: "tcp"
            FromPort: 22
            ToPort: 22
            CidrIp:
                Fn::ImportValue: !Sub ${EnvironmentName}-PUB2-SN
            Description: "Allow SSH to the bastion host in the Availability Zone b"

    BastionHostRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    -   Effect: "Allow"
                        Principal:
                            Service:
                                - "ec2.amazonaws.com"
                        Action:
                            - "sts:AssumeRole"
            Description: "The IAM role of second project that allow Administrator Access role"
            ManagedPolicyArns:
                - !Ref AdministratorManagedPolicy
            Tags:
                -   Key: "Name"
                    Value:
                        Fn::Join:
                            - ""
                            -   - !Ref EnvironmentName
                                - "-bastion-host-iam-role-"
                                -   Ref: "AWS::Region"

    BastionHostInstanceProfile:
        Type: "AWS::IAM::InstanceProfile"
        Properties:
            Path: "/"
            Roles:
                -   Ref: "BastionHostRole"

    WebServerLaunchTemplate:
        Type: AWS::EC2::LaunchTemplate
        Properties:
            LaunchTemplateData:
                ImageId: !Ref AMItoUse
                KeyName: !Ref KeyPair
                InstanceType: !Ref InstanceType
                NetworkInterfaces:
                    -   AssociatePublicIpAddress: true
                        DeleteOnTermination: true
                        DeviceIndex: 0
                        Groups:
                            -   Ref: "BastionHostSecurityGroup"
            LaunchTemplateName:
                Fn::Join:
                    - ""
                    -   - !Ref EnvironmentName
                        - "-bastion-host-launch-template-"
                        -   Ref: "AWS::Region"

    BastionHostInstance1a:
        Type: AWS::EC2::Instance
        Properties:
            NetworkInterfaces:
                -   DeviceIndex: 0
                    SubnetId:
                        Fn::ImportValue:
                            Fn::Join:
                                - ''
                                -   - !Ref EnvironmentName
                                    - "-public-subnet-"
                                    -   Ref: "AWS::Region"
                                    - "-a"
            LaunchTemplate:
                LaunchTemplateId:
                    Ref: "WebServerLaunchTemplate"
                Version:
                    Fn::GetAtt: "WebServerLaunchTemplate.LatestVersionNumber"
            Tags:
                -   Key: "Name"
                    Value:
                        Fn::Join:
                            - ""
                            -   - !Ref EnvironmentName
                                - "-bastion-host-"
                                -   Fn::Select:
                                        - 0
                                        -   Fn::GetAZs:
                                                Ref: "AWS::Region"

    BastionHostInstance1b:
        Type: AWS::EC2::Instance
        Properties:
            NetworkInterfaces:
                -   DeviceIndex: 0
                    SubnetId:
                        Fn::ImportValue:
                            Fn::Join:
                                - ''
                                -   - !Ref EnvironmentName
                                    - "-public-subnet-"
                                    -   Ref: "AWS::Region"
                                    - "-b"
            LaunchTemplate:
                LaunchTemplateId:
                    Ref: "WebServerLaunchTemplate"
                Version:
                    Fn::GetAtt: "WebServerLaunchTemplate.LatestVersionNumber"
            Tags:
                -   Key: "Name"
                    Value:
                        Fn::Join:
                            - ""
                            -   - !Ref EnvironmentName
                                - "-bastion-host-"
                                -   Fn::Select:
                                        - 1
                                        -   Fn::GetAZs:
                                                Ref: "AWS::Region"

Outputs:
    BastionHostInstanceConnection1a:
        Description: "The connection for the bastion host in the Availability Zone 1"
        Value:
            Fn::Join:
                - ""
                -   - "ec2-user@"
                    -   Fn::GetAtt: "BastionHostInstance1a.PublicIp"

    BastionHostInstanceConnection1b:
        Description: "The connection for the bastion host in the Availability Zone 2"
        Value:
            Fn::Join:
                - ""
                -   - "ec2-user@"
                    -   Fn::GetAtt: "BastionHostInstance1b.PublicIp"